import numpy as np

#a = np.uint64(10)

#temp = np.iinfo(np.int64)
#print(type(temp))
#print(temp)
#np.iinfo(a)
#print (2**128)

#x = -456
#print(x)
#x = np.uint(-456)
#print(x)

#массивы
#генерация массива
#arr, step = np.linspace(-6, 21, 60, endpoint=False, retstep=True)
#print (round(step,2))
#print(arr)

#######################################################################################################################################################################
#1 В переменную elem_5_3 сохраните элемент из 5 строки и 3 столбца
#2 В переменную last сохраните элемент из последней строки последнего столбца
#3 В переменную line_4 сохраните строку 4
#4 В переменную col_2 сохраните предпоследний столбец
#5 Из строк 2-4 (включительно) получите столбцы 3-5 (включительно). Результат сохраните в переменную part
#6 Сохраните в переменную rev последний столбец в обратном порядке
#7 Сохраните в переменную trans транспонированный массив

mystery_one = np.array([[-13586,  15203,  28445, -27117,  -1781, -17182, -18049],
                    [ 25936, -30968,  -1297,  -4593,   6451,  15790,   7181],
                    [ 13348,  28049,  28655,  -6012,  21762,  25397,   8225],
                    [ 13240,   7994,  32592,  20149,  13754,  11795,   -564],
                    [-21725,  -8681,  30305,  22260, -17918,  12578,  29943],
                    [-16841, -25392, -17278,  11740,   5916,    -47, -32037]],
      dtype=np.int16)
#1
elem_5_3 = mystery_one[4,2]
st, stl = mystery_one.shape
#2
last = mystery_one[st-1, stl-1]
#3
line_4 = mystery_one[3, :]
#4
part = mystery_one [1:4, 2:5]
#5
rev = mystery_one[:, stl-1]
rev = rev [::-1]
#6
trans = mystery_one.transpose()

#######################################################################################################################################################################
#дан массив
mystery = np.array([ 12279., -26024.,  28745.,  np.nan,  31244.,  -2365.,  -6974.,
                     -9212., np.nan, -17722.,  16132.,  25933.,  np.nan, -16431.,
                     29810.], dtype=np.float32)

#1 Получите булевый массив nans_index с информацией о np.nan в массиве mystery: True - значение пропущено, False - значение не пропущено
#2 В переменную n_nan сохраните число пропущенных значений
#3 Скопируйте массив mystery в массив mystery_new. Заполните пропущенные значения в массиве mystery_new нулями
#4 Поменяйте тип данных в массиве mystery на int32 и сохраните в переменную mystery_int
#5 Отсортируйте значения в массиве mystery по возрастанию и сохраните результат в переменную array
#6 Сохраните в массив table двухмерный массив, полученный из массива array. В нём должно быть 5 строк и 3 столбца. Причём порядок заполнения должен быть по столбцам!

#1
nans_index = np.isnan(mystery)
#2
n_nan = 0
for x in nans_index: 
    if x: n_nan += 1
#3
mystery_new = np.copy(mystery)
mystery_new[np.isnan(mystery_new)] = 0
#4
mystery_int = np.int32(mystery_new)
#5
array = np.sort(mystery)
#6
table = array.reshape(5,3,order='F')
col = table[:, 1]





